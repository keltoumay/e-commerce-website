(self.webpackChunk_postman_app_scratchpad=self.webpackChunk_postman_app_scratchpad||[]).push([[22],{7210:function(e,t,n){e.exports=n(7211)},7212:function(e,t,n){var r=n(5),i=n(4802),a=n(283),o=e=>e.match(/\[/g).length,s=e=>{switch(e){case"String":default:return"";case"Int":case"Int!":case"ID":return 0;case"Boolean":return!0;case"object":return{};case"[]":return[]}};function u(e,t,n=0,r=4){var l,c={};n++;const p=t.getType((e=>{let t;if(e=a.toString(e),["String","ID","Boolean"].every((n=>!e.includes(n)||(t=n,!1))),t)return t;if(e.includes("[")){const t=(e,t)=>{let n=t;for(;e>1;)n+=t,e--;return n},n=o(e),r=t(n,"["),i=t(n,"]");e=e.split(r)[1].split(i)[0]}return e.split("!")[0]})(e)),d=a.toString(e);if(i.isInputObjectType(p))return"object"==typeof(l=p.getFields())&&Object.keys(l).forEach((i=>{l[i].type===e?c[i]="<Same as "+e+">":n<=r&&(d.includes("[")&&d.includes("]")&&(c[i]=[u(l[i].type,t,n,r)]),c[i]=u(l[i].type,t,n,r))})),c;if(d.includes("[")){const e=s(a.toString(p));let t=o(d),n=e;for(;t>0;)n=[n],t--;return n}return s(a.toString(p))}e.exports={schemaToQuery(e,t){const n={};let i=t.depth,a=t.includeDeprecatedFields||!1,o=t.variableDepth||4;function s(t,n,r,o={},u={},l={},c=1){const p=e.getType(n).getFields()[t],d=p.type.inspect().replace(/[[\]!]/g,""),f=e.getType(d),y=t;let m="",g="";if(f.getFields){if(l.hasOwnProperty(y)&&l[y]||c>i)return l[y]=!1,"";l[y]=!0,g=Object.keys(f.getFields()||{}).filter((t=>{const n=e.getType(f).getFields()[t];return a||!n.isDeprecated})).map((e=>s(e,f,t,o,u,l,c+1).queryStr)).filter((e=>e)).join("\n")}if(!f.getFields||g){if(m=`${"    ".repeat(c)}${p.name}`,p.args.length>0){const e=function(e,t,n={}){return e.args.reduce(((e,r)=>{if(r.name in t){const n=t[r.name]+1;t[r.name]=n,e[`${r.name}${n}`]=r}else n[r.name]?(t[r.name]=1,e[`${r.name}1`]=r):e[r.name]=r;return e}),{})}(p,u,o);Object.assign(o,e),m+=` (${(e=>"object"!=typeof e?"":Object.entries(e).map((([e,t])=>`${t.name}: $${e}`)).join(", "))(e)})`}g&&(m+=` {\n${g}\n${"    ".repeat(c)}}`)}if(f.astNode&&"UnionTypeDefinition"===f.astNode.kind){if(l.hasOwnProperty(y)&&l[y]||c>i)return l[y]=!1,"";l[y]=!0;const n=f.getTypes();if(n&&n.length){const r=`${"    ".repeat(c)}`,i=`${"    ".repeat(c+1)}`;m+=" {\n";for(let r=0,a=n.length;r<a;r++){const a=n[r],p=e.getType(a);m+=`${i}... on ${a} {\n${Object.keys(p.getFields()||{}).map((e=>{if(e===t){return`${"    ".repeat(c+2)}# self reference detected\n${"    ".repeat(c+2)}# skipping "${e}"`}return s(e,p,t,o,u,l,c+2).queryStr})).filter((e=>e)).join("\n")}\n${i}}\n`}m+=`${r}}`}}return l[y]=!1,{queryStr:m,argumentsDict:o}}function l(t,i){let l,c={};switch(i){case"Mutation":l="mutations";break;case"Query":l="queries";break;case"Subscription":l="subscriptions";break;default:r.log("[gqlg warning]:","description is required")}"object"==typeof t&&Object.keys(t).forEach((t=>{let n,r;if("Mutation"===i?(n=e._mutationType._fields[t],r=e._mutationType.name):"Query"===i?(n=e._queryType._fields[t],r=e._queryType.name):"Subscription"===i&&(n=e._subscriptionType._fields[t],r=e._subscriptionType.name),a||!n.isDeprecated){const n=s(t,r),a="object"!=typeof(p=n.argumentsDict)?"":Object.entries(p).map((([e,t])=>`$${e}: ${t.type}`)).join(", ");var l={};"object"==typeof n.argumentsDict&&Object.entries(n.argumentsDict).map((([t,n])=>{l[t]=u(n.type,e,0,o)}));let d=n.queryStr;d=`${i.toLowerCase()} ${t}${a?` (${a}) `:" "}{\n${d}\n}`,c[t]={query:d,variables:JSON.stringify(l,null,2)}}var p})),n[l]=c}return e.getMutationType()&&l(e.getMutationType().getFields(),"Mutation"),e.getQueryType()&&l(e.getQueryType().getFields(),"Query"),e.getSubscriptionType()&&l(e.getSubscriptionType().getFields(),"Subscription"),n}}},7211:function(e,t,n){var r,i=n(165).Buffer,a=n(7212).schemaToQuery,o=n(7213),{Collection:s}=n(1350),{ItemGroup:u}=n(1351),{Variable:l}=n(1346),c=n(283),p=n(4802);const d="Postman Collection (from GraphQL)";function f(e){var t,n;try{(n=o.asJson(e)).data&&(n=n.data),t=p.buildClientSchema(n)}catch(n){try{t=p.buildSchema(e)}catch(e){return!1}}return t}r={getMetaData:function(e,t){return e.data?t(null,{result:!0,name:d,output:[{type:"collection",name:d}]}):t(null,{result:!1,reason:"Invalid input data."})},validate:function(e){var t,n;if("file"===e.type)try{n=o.getDataFromFile(e.data)}catch(e){return{result:!1}}else{if("string"!==e.type)return{result:!1};n=e.data}return!(t=f(n))||t._mutationType||t._queryType||t._subscriptionType?t?{result:!0}:{result:!1}:{result:!1,reason:"Specification doesn't contain valid mutation, query or subscription type"}},getOptions:function(){return[{name:"Include deprecated fields",id:"includeDeprecatedFields",type:"boolean",default:!1,description:"Generated queries will include deprecated fields",external:!0},{name:"Query depth level",id:"depth",type:"number",default:1,description:"The number of levels of information that should be returned. (A depth level of “1” returns that object and its properties. A depth of “2” will return all the nodes connected to the level 1 node, etc.). Maximum depth supported is 4, to work with more depth checkout [CLI usage](https://github.com/postmanlabs/graphql-to-postman#-command-line-interface).",external:!0},{name:"Optimize conversion",id:"optimizeConversion",type:"boolean",default:!1,description:"Optimizes conversion for schemas with complex and nested input objects by reducing the depth to which input objects are resolved in GraphQL variables.",external:!0},{name:"CLI flag",id:"__CLI",type:"boolean",default:!1,description:"Indicates if current environment running env is CLI or not.",external:!1}]},convert:function(e,t,n){var p,y,m,g,h=new s;if(t=function(e){var t=r.getOptions();return c.forEach(t,(t=>{c.has(e,t.id)?t.availableOptions?c.includes(t.availableOptions,e[t.id])||(e[t.id]=t.default):typeof e[t.id]!==t.type&&(parseInt(e[t.id]),!1===t.type&&(e[t.id]=t.default)):e[t.id]=t.default})),!e.__CLI&&e.depth>4&&(e.depth=4),e}(t),h.name=d,"file"===e.type)try{y=o.getDataFromFile(e.data)}catch(e){return n(null,{result:!1,reason:e.message})}else{if("string"!==e.type)return n(null,{result:!1,reason:"Input type not supported."});y=e.data}p=f(y);try{return p?(m=function(e){let t=JSON.stringify(e);return{size:i.byteLength(t,"utf8")/1048576}}(p),t.variableDepth=4,(m.size>=5||t.optimizeConversion)&&(t.variableDepth=2),g=a(p,t),c.forEach(g,((e,t)=>{var n=new u;n.name=t,c.forEach(e,((e,t)=>{var r={},i={};i.name=t,r.url="{{url}}",r.method="POST",r.body={mode:"graphql",graphql:e},i.request=r,n.items.add(i)})),h.items.add(n)})),h.variables.add(new l({id:"url",value:"",description:"URL for the request."})),n(null,{result:!0,output:[{type:"collection",data:h.toJSON()}]})):n(null,{result:!1,reason:"Invalid Data."})}catch(e){return e.message?n(null,{result:!1,reason:"Could not generate collection. Error Message:"+e.message}):n(e)}}},e.exports=r},7213:function(e,t,n){var r=n(203);e.exports={asJson:function(e){try{return JSON.parse(e)}catch(e){throw new SyntaxError(`Specification is not a valid JSON. ${e}`)}},getDataFromFile:function(e){return r.readFileSync(e).toString()}}}}]);